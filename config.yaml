gateways:
    # use this for local development and tryingout SQLMesh
    local:
        connection:
            type: duckdb
            database: db.db

    # use this for a realistic project
    bigquery:
        connection:
            concurrent_tasks: 24
            register_comments: true
            type: bigquery
            method: service-account-json
            keyfile_json: {{ env_var('GOOGLE_CREDENTIALS') }}
            project: sqlmesh-demo
        state_connection:
            type: postgres
            host: {{ env_var('SQLMESH_STATE_HOST') }}
            port: 5432
            user: {{ env_var('SQLMESH_STATE_USERNAME') }}
            password: {{ env_var('SQLMESH_STATE_PASSWORD') }}
            database: sqlmesh_state_demo

default_gateway: bigquery

model_defaults:
    dialect: bigquery

# enables synchronized deployments to prod when a PR is merged
cicd_bot:
    type: github
    merge_method: squash
    enable_deploy_command: true
    auto_categorize_changes:
      external: full
      python: full
      sql: full
      seed: full

# list of users that are allowed to approve PRs for synchronized deployments
# users:
# - username: sung_sqlmesh
#   github_username: sungchun12
#   roles:
#     - required_approver